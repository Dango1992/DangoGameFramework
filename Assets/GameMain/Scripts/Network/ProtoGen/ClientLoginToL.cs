// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Client.LoginToL.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Client {

  /// <summary>Holder for reflection information generated from Client.LoginToL.proto</summary>
  public static partial class ClientLoginToLReflection {

    #region Descriptor
    /// <summary>File descriptor for Client.LoginToL.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientLoginToLReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVDbGllbnQuTG9naW5Ub0wucHJvdG8SBkNsaWVudCJXChNNU0dfQ0xJRU5U",
            "X0xPR0lOVE9MEhAKCE9wZXJhdG9yGAEgASgFEg4KBlVzZXJJZBgCIAEoAxIN",
            "CgVUb2tlbhgDIAEoCRIPCgdWZXJzaW9uGAQgASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Client.MSG_CLIENT_LOGINTOL), global::Client.MSG_CLIENT_LOGINTOL.Parser, new[]{ "Operator", "UserId", "Token", "Version" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MSG_CLIENT_LOGINTOL : pb::IMessage<MSG_CLIENT_LOGINTOL> {
    private static readonly pb::MessageParser<MSG_CLIENT_LOGINTOL> _parser = new pb::MessageParser<MSG_CLIENT_LOGINTOL>(() => new MSG_CLIENT_LOGINTOL());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MSG_CLIENT_LOGINTOL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Client.ClientLoginToLReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_CLIENT_LOGINTOL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_CLIENT_LOGINTOL(MSG_CLIENT_LOGINTOL other) : this() {
      operator_ = other.operator_;
      userId_ = other.userId_;
      token_ = other.token_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_CLIENT_LOGINTOL Clone() {
      return new MSG_CLIENT_LOGINTOL(this);
    }

    /// <summary>Field number for the "Operator" field.</summary>
    public const int OperatorFieldNumber = 1;
    private int operator_;
    /// <summary>
    ///&lt;1:Android手Q, 2:Android微信, 3:ios手Q, 4:ios微信
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Operator {
      get { return operator_; }
      set {
        operator_ = value;
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "Token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 4;
    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MSG_CLIENT_LOGINTOL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MSG_CLIENT_LOGINTOL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Operator != other.Operator) return false;
      if (UserId != other.UserId) return false;
      if (Token != other.Token) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Operator != 0) hash ^= Operator.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Operator != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Operator);
      }
      if (UserId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UserId);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (Version != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Operator != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Operator);
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MSG_CLIENT_LOGINTOL other) {
      if (other == null) {
        return;
      }
      if (other.Operator != 0) {
        Operator = other.Operator;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Operator = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt64();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
          case 32: {
            Version = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
