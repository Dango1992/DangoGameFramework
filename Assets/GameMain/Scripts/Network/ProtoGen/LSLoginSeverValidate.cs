// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LS.LoginSeverValidate.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LS {

  /// <summary>Holder for reflection information generated from LS.LoginSeverValidate.proto</summary>
  public static partial class LSLoginSeverValidateReflection {

    #region Descriptor
    /// <summary>File descriptor for LS.LoginSeverValidate.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LSLoginSeverValidateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtMUy5Mb2dpblNldmVyVmFsaWRhdGUucHJvdG8SAkxTIloKGE1TR19MT0dJ",
            "TlNFUlZFUl9WQUxJREFURRIMCgRQb3J0GAEgASgFEg4KBlVzZXJJZBgCIAEo",
            "AxIKCgJJcBgDIAEoCRIUCgxDaGVja091dFRleHQYBCABKAxiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LS.MSG_LOGINSERVER_VALIDATE), global::LS.MSG_LOGINSERVER_VALIDATE.Parser, new[]{ "Port", "UserId", "Ip", "CheckOutText" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MSG_LOGINSERVER_VALIDATE : pb::IMessage<MSG_LOGINSERVER_VALIDATE> {
    private static readonly pb::MessageParser<MSG_LOGINSERVER_VALIDATE> _parser = new pb::MessageParser<MSG_LOGINSERVER_VALIDATE>(() => new MSG_LOGINSERVER_VALIDATE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MSG_LOGINSERVER_VALIDATE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LS.LSLoginSeverValidateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_LOGINSERVER_VALIDATE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_LOGINSERVER_VALIDATE(MSG_LOGINSERVER_VALIDATE other) : this() {
      port_ = other.port_;
      userId_ = other.userId_;
      ip_ = other.ip_;
      checkOutText_ = other.checkOutText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MSG_LOGINSERVER_VALIDATE Clone() {
      return new MSG_LOGINSERVER_VALIDATE(this);
    }

    /// <summary>Field number for the "Port" field.</summary>
    public const int PortFieldNumber = 1;
    private int port_;
    /// <summary>
    ///&lt;GameServer 端口
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private long userId_;
    /// <summary>
    ///&lt;UserID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "Ip" field.</summary>
    public const int IpFieldNumber = 3;
    private string ip_ = "";
    /// <summary>
    ///&lt;GameServer IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ip {
      get { return ip_; }
      set {
        ip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CheckOutText" field.</summary>
    public const int CheckOutTextFieldNumber = 4;
    private pb::ByteString checkOutText_ = pb::ByteString.Empty;
    /// <summary>
    ///&lt;校验码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CheckOutText {
      get { return checkOutText_; }
      set {
        checkOutText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MSG_LOGINSERVER_VALIDATE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MSG_LOGINSERVER_VALIDATE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Port != other.Port) return false;
      if (UserId != other.UserId) return false;
      if (Ip != other.Ip) return false;
      if (CheckOutText != other.CheckOutText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Port != 0) hash ^= Port.GetHashCode();
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (Ip.Length != 0) hash ^= Ip.GetHashCode();
      if (CheckOutText.Length != 0) hash ^= CheckOutText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Port != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Port);
      }
      if (UserId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(UserId);
      }
      if (Ip.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ip);
      }
      if (CheckOutText.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(CheckOutText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (Ip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ip);
      }
      if (CheckOutText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CheckOutText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MSG_LOGINSERVER_VALIDATE other) {
      if (other == null) {
        return;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.Ip.Length != 0) {
        Ip = other.Ip;
      }
      if (other.CheckOutText.Length != 0) {
        CheckOutText = other.CheckOutText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Port = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt64();
            break;
          }
          case 26: {
            Ip = input.ReadString();
            break;
          }
          case 34: {
            CheckOutText = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
